///Keras Model for c++ usage
///Author: Miqueias Melo de Almeida

///sigmoid output function
double sigmoid_k57nj2(double z){
	return 1./(1+TMath::Exp(-z));
}

///max function (ReLU)
double relu_k57nj2(double value){
	double max_val = (value > 0)? value:0;
	return max_val;
}

///PReLU function
double prelu_k57nj2(double slope, double value){
	double max_val = (value > 0)? value:(value*slope);
	return max_val;
}

///SeLU function
double selu_k57nj2(double value){
	double alpha = 1.6732632423;
	double scale = 1.0507009873;
	double fvalue = (value >= 0)? (scale*value):(scale*alpha*(TMath::Exp(value)-1));
	return fvalue;
}

///Set of neuron functions with their respective weight and bias
double l4_func_k57nj2(std::vector<double> &inputs, int neuron){
	double z = 0;
	switch(neuron){
		case 0:
			z += -0.2423689812*inputs[0];
			z += -0.5267704129*inputs[1];
			z += -0.4559065402*inputs[2];
			z += -0.3815885186*inputs[3];
			z += 0.4538799822*inputs[4];
			z += -0.3953844309*inputs[5];
			z += 0.6748248935*inputs[6];
			z += 0.3067559600*inputs[7];
			z += -0.0473807268;
		break;
	}

	return z;
}
double l3_func_k57nj2(std::vector<double> &inputs, int neuron){
	double z = 0;
	switch(neuron){
		case 0:
			z += -0.0032913287*inputs[0];
			z += -0.1267704964*inputs[1];
			z += 0.0498136580*inputs[2];
			z += 0.0690904856*inputs[3];
			z += -0.3229417503*inputs[4];
			z += 0.2173145562*inputs[5];
			z += 0.1337865442*inputs[6];
			z += -0.3472447991*inputs[7];
			z += -0.1238317192*inputs[8];
			z += 0.3016886115*inputs[9];
			z += 0.0154659459*inputs[10];
			z += 0.0763506293*inputs[11];
			z += -0.2960342467*inputs[12];
			z += 0.1302199364;
		break;
		case 1:
			z += 0.0270641390*inputs[0];
			z += -0.2684023380*inputs[1];
			z += -0.1181590557*inputs[2];
			z += -0.3508574069*inputs[3];
			z += -0.5077602267*inputs[4];
			z += 0.2678143084*inputs[5];
			z += 0.2114266455*inputs[6];
			z += -0.3466396928*inputs[7];
			z += -0.0999647826*inputs[8];
			z += 0.2759882510*inputs[9];
			z += -0.1247021183*inputs[10];
			z += 0.1133372560*inputs[11];
			z += -0.2210641801*inputs[12];
			z += -0.0120114759;
		break;
		case 2:
			z += -0.1470811665*inputs[0];
			z += 0.0291499551*inputs[1];
			z += -0.0385561883*inputs[2];
			z += -0.2089214921*inputs[3];
			z += -0.2520381808*inputs[4];
			z += 0.2664766908*inputs[5];
			z += 0.2622562945*inputs[6];
			z += -0.0043015135*inputs[7];
			z += 0.1740314215*inputs[8];
			z += 0.1311861873*inputs[9];
			z += -0.1190538406*inputs[10];
			z += 0.2591731548*inputs[11];
			z += -0.5498777628*inputs[12];
			z += 0.0916811675;
		break;
		case 3:
			z += -0.3049646318*inputs[0];
			z += -0.5168717504*inputs[1];
			z += 0.1541963220*inputs[2];
			z += 0.1797775924*inputs[3];
			z += 0.0093655419*inputs[4];
			z += 0.3079397380*inputs[5];
			z += 0.5338217616*inputs[6];
			z += 0.0071434639*inputs[7];
			z += -0.3056882918*inputs[8];
			z += 0.0967230126*inputs[9];
			z += -0.0147134885*inputs[10];
			z += 0.0434763990*inputs[11];
			z += -0.2327339202*inputs[12];
			z += 0.1269786358;
		break;
		case 4:
			z += 0.0620102771*inputs[0];
			z += 0.0574651212*inputs[1];
			z += -0.1457101703*inputs[2];
			z += 0.0613198727*inputs[3];
			z += 0.2478353381*inputs[4];
			z += -0.1805496067*inputs[5];
			z += -0.1360018402*inputs[6];
			z += 0.1562485695*inputs[7];
			z += 0.1612666398*inputs[8];
			z += -0.2184479684*inputs[9];
			z += -0.0512889139*inputs[10];
			z += -0.2158711255*inputs[11];
			z += 0.2695198059*inputs[12];
			z += -0.1506500989;
		break;
		case 5:
			z += 0.0302352048*inputs[0];
			z += 0.2676137090*inputs[1];
			z += 0.1776989549*inputs[2];
			z += -0.4327189326*inputs[3];
			z += -0.2813774645*inputs[4];
			z += 0.0972064883*inputs[5];
			z += 0.1454671025*inputs[6];
			z += -0.1213634983*inputs[7];
			z += -0.2209355235*inputs[8];
			z += 0.0487774163*inputs[9];
			z += -0.1662162393*inputs[10];
			z += 0.4437687695*inputs[11];
			z += -0.0299649406*inputs[12];
			z += 0.0553467199;
		break;
		case 6:
			z += 0.0019299525*inputs[0];
			z += 0.0879936665*inputs[1];
			z += -0.1541479081*inputs[2];
			z += 0.0982412398*inputs[3];
			z += 0.2864184678*inputs[4];
			z += -0.3111438751*inputs[5];
			z += -0.0679874569*inputs[6];
			z += 0.1614986807*inputs[7];
			z += 0.1602413803*inputs[8];
			z += -0.2590895295*inputs[9];
			z += -0.3112585545*inputs[10];
			z += -0.1792703718*inputs[11];
			z += 0.2519700229*inputs[12];
			z += -0.0958471224;
		break;
		case 7:
			z += 0.1093377545*inputs[0];
			z += -0.0040761265*inputs[1];
			z += -0.0467105806*inputs[2];
			z += 0.1270019561*inputs[3];
			z += 0.2559543848*inputs[4];
			z += -0.2186459452*inputs[5];
			z += -0.1438793093*inputs[6];
			z += 0.1039323881*inputs[7];
			z += 0.0370513238*inputs[8];
			z += -0.2007695585*inputs[9];
			z += -0.0995481163*inputs[10];
			z += -0.2435515076*inputs[11];
			z += 0.3431096077*inputs[12];
			z += -0.0691912174;
		break;
	}

	return z;
}
double l2_func_k57nj2(std::vector<double> &inputs, int neuron){
	double z = 0;
	switch(neuron){
		case 0:
			z += -0.0110034235*inputs[0];
			z += -0.0153399874*inputs[1];
			z += 0.0831953287*inputs[2];
			z += 0.1177901477*inputs[3];
			z += -0.1083592772*inputs[4];
			z += 0.1226188242*inputs[5];
			z += 0.0275446717*inputs[6];
			z += 0.0881739631*inputs[7];
			z += -0.1633477807*inputs[8];
			z += 0.1346352547*inputs[9];
			z += 0.0759980977*inputs[10];
			z += 0.1120251715*inputs[11];
			z += -0.0091402903*inputs[12];
			z += 0.0290201623*inputs[13];
			z += 0.1269450635*inputs[14];
			z += -0.0674346983*inputs[15];
			z += 0.0451000817*inputs[16];
			z += -0.1074369028*inputs[17];
			z += -0.2990183532*inputs[18];
			z += -0.0545813888*inputs[19];
			z += -0.0267949328*inputs[20];
			z += -0.1091184244;
		break;
		case 1:
			z += -0.0196093265*inputs[0];
			z += 0.0621976852*inputs[1];
			z += 0.3318879604*inputs[2];
			z += 0.0577151626*inputs[3];
			z += -0.0345400050*inputs[4];
			z += 0.1962715387*inputs[5];
			z += -0.0089892680*inputs[6];
			z += 0.0089805517*inputs[7];
			z += -0.1799169928*inputs[8];
			z += 0.1934053153*inputs[9];
			z += 0.1376631260*inputs[10];
			z += 0.0062685795*inputs[11];
			z += 0.0211362354*inputs[12];
			z += 0.1321574599*inputs[13];
			z += 0.1069769636*inputs[14];
			z += 0.0292888377*inputs[15];
			z += 0.3030797541*inputs[16];
			z += -0.1007631868*inputs[17];
			z += -0.2802471220*inputs[18];
			z += -0.0103338715*inputs[19];
			z += -0.1128353924*inputs[20];
			z += -0.1428397149;
		break;
		case 2:
			z += -0.1367803812*inputs[0];
			z += -0.1223592237*inputs[1];
			z += 0.0720441341*inputs[2];
			z += 0.0240792334*inputs[3];
			z += -0.1013646871*inputs[4];
			z += -0.2700967193*inputs[5];
			z += 0.0670475513*inputs[6];
			z += -0.0621330142*inputs[7];
			z += 0.0631772056*inputs[8];
			z += -0.2630534768*inputs[9];
			z += -0.2267484069*inputs[10];
			z += -0.0493244417*inputs[11];
			z += -0.0627689362*inputs[12];
			z += -0.1557051241*inputs[13];
			z += -0.2536558807*inputs[14];
			z += 0.0543487780*inputs[15];
			z += 0.0097400872*inputs[16];
			z += 0.0266898777*inputs[17];
			z += 0.1608980149*inputs[18];
			z += -0.0438618734*inputs[19];
			z += -0.0379270576*inputs[20];
			z += 0.2198539227;
		break;
		case 3:
			z += -0.0464418381*inputs[0];
			z += -0.0266961809*inputs[1];
			z += 0.0255572554*inputs[2];
			z += -0.0675097108*inputs[3];
			z += -0.0640085042*inputs[4];
			z += -0.1110224426*inputs[5];
			z += -0.1352854222*inputs[6];
			z += -0.1102264971*inputs[7];
			z += 0.0321081914*inputs[8];
			z += -0.1443535984*inputs[9];
			z += -0.0733333752*inputs[10];
			z += 0.2522905767*inputs[11];
			z += -0.0493672974*inputs[12];
			z += -0.1256011128*inputs[13];
			z += -0.1355762035*inputs[14];
			z += -0.0034617709*inputs[15];
			z += 0.0505622551*inputs[16];
			z += -0.1019973084*inputs[17];
			z += 0.1093621925*inputs[18];
			z += 0.0613331497*inputs[19];
			z += -0.0277631003*inputs[20];
			z += 0.0893088952;
		break;
		case 4:
			z += 0.0447276831*inputs[0];
			z += 0.0987317562*inputs[1];
			z += 0.3391330242*inputs[2];
			z += -0.0703024939*inputs[3];
			z += -0.0467396043*inputs[4];
			z += 0.1997676045*inputs[5];
			z += 0.2046747357*inputs[6];
			z += -0.0616298914*inputs[7];
			z += -0.2705338001*inputs[8];
			z += 0.1420740336*inputs[9];
			z += 0.1486909240*inputs[10];
			z += -0.4378195107*inputs[11];
			z += 0.0997398496*inputs[12];
			z += 0.0598011203*inputs[13];
			z += 0.1433405131*inputs[14];
			z += -0.1248333305*inputs[15];
			z += -0.0136060733*inputs[16];
			z += -0.1700904816*inputs[17];
			z += 0.2433030903*inputs[18];
			z += 0.0501383878*inputs[19];
			z += -0.0134173688*inputs[20];
			z += -0.1466719508;
		break;
		case 5:
			z += -0.2855346203*inputs[0];
			z += 0.0172785614*inputs[1];
			z += -0.2469329089*inputs[2];
			z += -0.1461395770*inputs[3];
			z += -0.0937059820*inputs[4];
			z += -0.1907164901*inputs[5];
			z += -0.0710730329*inputs[6];
			z += -0.1980426013*inputs[7];
			z += -0.0643617138*inputs[8];
			z += -0.1859239936*inputs[9];
			z += -0.1387963295*inputs[10];
			z += -0.0250584576*inputs[11];
			z += -0.2558914423*inputs[12];
			z += -0.1570168436*inputs[13];
			z += -0.1949066669*inputs[14];
			z += 0.3313296139*inputs[15];
			z += 0.0778262466*inputs[16];
			z += 0.0575374812*inputs[17];
			z += 0.3535322547*inputs[18];
			z += -0.1230971217*inputs[19];
			z += -0.0532662570*inputs[20];
			z += 0.1795332134;
		break;
		case 6:
			z += 0.0790124685*inputs[0];
			z += -0.1118868813*inputs[1];
			z += 0.1136198565*inputs[2];
			z += -0.1951962560*inputs[3];
			z += -0.1388094872*inputs[4];
			z += -0.2478622496*inputs[5];
			z += -0.1302853823*inputs[6];
			z += 0.1196624562*inputs[7];
			z += 0.0937711373*inputs[8];
			z += -0.2569459975*inputs[9];
			z += -0.2852542698*inputs[10];
			z += -0.1488711387*inputs[11];
			z += 0.0760322958*inputs[12];
			z += -0.1786831319*inputs[13];
			z += -0.2743185163*inputs[14];
			z += 0.1710767001*inputs[15];
			z += 0.2387340963*inputs[16];
			z += -0.0248581562*inputs[17];
			z += 0.0156312548*inputs[18];
			z += -0.2273667604*inputs[19];
			z += -0.1580842584*inputs[20];
			z += 0.2583676577;
		break;
		case 7:
			z += -0.0041921032*inputs[0];
			z += 0.1232781857*inputs[1];
			z += 0.2013051808*inputs[2];
			z += 0.0324286968*inputs[3];
			z += 0.0056807315*inputs[4];
			z += 0.2369807512*inputs[5];
			z += 0.1049631834*inputs[6];
			z += 0.1801458895*inputs[7];
			z += -0.2465620935*inputs[8];
			z += 0.1850666404*inputs[9];
			z += 0.1836562306*inputs[10];
			z += -0.3864989281*inputs[11];
			z += -0.0796695352*inputs[12];
			z += 0.1352617592*inputs[13];
			z += 0.1706390083*inputs[14];
			z += -0.0162841249*inputs[15];
			z += -0.0024651941*inputs[16];
			z += -0.1023389995*inputs[17];
			z += -0.0413640402*inputs[18];
			z += -0.0198851302*inputs[19];
			z += -0.0099800425*inputs[20];
			z += -0.1976383775;
		break;
		case 8:
			z += -0.0687785745*inputs[0];
			z += 0.0337192006*inputs[1];
			z += -0.2062137276*inputs[2];
			z += -0.0635609627*inputs[3];
			z += -0.2831463516*inputs[4];
			z += 0.0411648974*inputs[5];
			z += -0.0090940753*inputs[6];
			z += 0.1508695185*inputs[7];
			z += -0.1350654662*inputs[8];
			z += 0.0685163438*inputs[9];
			z += 0.0440895781*inputs[10];
			z += 0.0352743119*inputs[11];
			z += 0.0820262879*inputs[12];
			z += -0.0547803864*inputs[13];
			z += 0.0416407436*inputs[14];
			z += -0.3618291616*inputs[15];
			z += 0.0572046936*inputs[16];
			z += -0.1163652316*inputs[17];
			z += 0.1630876809*inputs[18];
			z += -0.1990355998*inputs[19];
			z += 0.0846642032*inputs[20];
			z += -0.0482206941;
		break;
		case 9:
			z += -0.0030042753*inputs[0];
			z += -0.2604579329*inputs[1];
			z += 0.0927780867*inputs[2];
			z += 0.0130137969*inputs[3];
			z += -0.0032913955*inputs[4];
			z += -0.2257553935*inputs[5];
			z += 0.0832460225*inputs[6];
			z += -0.0838666186*inputs[7];
			z += 0.2052507848*inputs[8];
			z += -0.1487145871*inputs[9];
			z += -0.1255075485*inputs[10];
			z += -0.1399922967*inputs[11];
			z += 0.1814859062*inputs[12];
			z += -0.0991661251*inputs[13];
			z += -0.2272503674*inputs[14];
			z += 0.0609181225*inputs[15];
			z += -0.0900129601*inputs[16];
			z += 0.0257805772*inputs[17];
			z += 0.1180129796*inputs[18];
			z += -0.0084854383*inputs[19];
			z += 0.1009656042*inputs[20];
			z += 0.1721419692;
		break;
		case 10:
			z += -0.0577183701*inputs[0];
			z += 0.0378004201*inputs[1];
			z += -0.0619417243*inputs[2];
			z += 0.0637985393*inputs[3];
			z += -0.0883606896*inputs[4];
			z += -0.1589018255*inputs[5];
			z += 0.0854561627*inputs[6];
			z += -0.0503638014*inputs[7];
			z += 0.1142325550*inputs[8];
			z += -0.1416522563*inputs[9];
			z += -0.1071959138*inputs[10];
			z += 0.0220421776*inputs[11];
			z += 0.2250067145*inputs[12];
			z += -0.0557400286*inputs[13];
			z += -0.1389496624*inputs[14];
			z += 0.0593982264*inputs[15];
			z += -0.0019783666*inputs[16];
			z += 0.0891161785*inputs[17];
			z += 0.2980330586*inputs[18];
			z += 0.2813929617*inputs[19];
			z += -0.0668768510*inputs[20];
			z += 0.1567269266;
		break;
		case 11:
			z += 0.0980321541*inputs[0];
			z += 0.2107212692*inputs[1];
			z += 0.1422509700*inputs[2];
			z += 0.0641927868*inputs[3];
			z += -0.0214603916*inputs[4];
			z += -0.0588248335*inputs[5];
			z += 0.1075482070*inputs[6];
			z += 0.0646032542*inputs[7];
			z += -0.1284174919*inputs[8];
			z += -0.1102316529*inputs[9];
			z += -0.0539048687*inputs[10];
			z += -0.4046861231*inputs[11];
			z += 0.0256497599*inputs[12];
			z += -0.0783083886*inputs[13];
			z += -0.0381363779*inputs[14];
			z += -0.1264960766*inputs[15];
			z += 0.0753267929*inputs[16];
			z += 0.0653276220*inputs[17];
			z += 0.1320950687*inputs[18];
			z += 0.0557451360*inputs[19];
			z += -0.0269809105*inputs[20];
			z += 0.0873876363;
		break;
		case 12:
			z += 0.1159289777*inputs[0];
			z += -0.3295260966*inputs[1];
			z += 0.0042857216*inputs[2];
			z += 0.1175123677*inputs[3];
			z += -0.0523441881*inputs[4];
			z += 0.1551580727*inputs[5];
			z += 0.1807451397*inputs[6];
			z += -0.0959127173*inputs[7];
			z += 0.1474058181*inputs[8];
			z += 0.1140907481*inputs[9];
			z += 0.1005433053*inputs[10];
			z += -0.2047674656*inputs[11];
			z += 0.1705339998*inputs[12];
			z += 0.1243213788*inputs[13];
			z += 0.1397702098*inputs[14];
			z += 0.0643827692*inputs[15];
			z += -0.3766111135*inputs[16];
			z += -0.1169969961*inputs[17];
			z += -0.0381755792*inputs[18];
			z += -0.0760210529*inputs[19];
			z += 0.0975696221*inputs[20];
			z += -0.1402754486;
		break;
	}

	return z;
}
double l1_func_k57nj2(std::vector<double> &inputs, int neuron){
	double z = 0;
	switch(neuron){
		case 0:
			z += 0.0561605655*inputs[0];
			z += 0.0274801925*inputs[1];
			z += -0.1502914131*inputs[2];
			z += 0.0095994715*inputs[3];
			z += 0.1340840012*inputs[4];
			z += -0.2368376553*inputs[5];
			z += -0.0232545342*inputs[6];
			z += -0.2667929232*inputs[7];
			z += -0.2609203756*inputs[8];
			z += -0.1138733476*inputs[9];
			z += 0.1090029031*inputs[10];
			z += -0.0506944172*inputs[11];
			z += -0.0163221788*inputs[12];
			z += -0.1457399428*inputs[13];
			z += -0.2862326503*inputs[14];
			z += 0.0513392277*inputs[15];
			z += 0.2359916121*inputs[16];
			z += -0.2265751660*inputs[17];
			z += -0.0649266616;
		break;
		case 1:
			z += 0.0049898578*inputs[0];
			z += -0.7033315301*inputs[1];
			z += -0.0315625891*inputs[2];
			z += 0.0494060256*inputs[3];
			z += -0.6059332490*inputs[4];
			z += -0.0152816772*inputs[5];
			z += 0.0618364587*inputs[6];
			z += -0.3141402006*inputs[7];
			z += -0.2072047889*inputs[8];
			z += 0.0528414212*inputs[9];
			z += -0.4872462451*inputs[10];
			z += -0.2170274407*inputs[11];
			z += -0.0138220228*inputs[12];
			z += 1.5263556242*inputs[13];
			z += -0.2208675593*inputs[14];
			z += -0.0111293355*inputs[15];
			z += 0.3042360246*inputs[16];
			z += -0.0391981713*inputs[17];
			z += 0.1930388063;
		break;
		case 2:
			z += -0.0126730213*inputs[0];
			z += -0.0552284196*inputs[1];
			z += -0.0471114926*inputs[2];
			z += -0.0303756725*inputs[3];
			z += 0.0728817135*inputs[4];
			z += -0.0950536281*inputs[5];
			z += -0.0621829219*inputs[6];
			z += -0.1039071754*inputs[7];
			z += -0.0101368129*inputs[8];
			z += -0.0269460976*inputs[9];
			z += 0.1363302320*inputs[10];
			z += 0.0973222777*inputs[11];
			z += 0.0247727390*inputs[12];
			z += 0.6908003092*inputs[13];
			z += 0.0853817984*inputs[14];
			z += 0.0770096555*inputs[15];
			z += 1.2230285406*inputs[16];
			z += -0.3204208612*inputs[17];
			z += -0.0653329566;
		break;
		case 3:
			z += -0.0452827699*inputs[0];
			z += 0.3315199018*inputs[1];
			z += -0.3446244001*inputs[2];
			z += -0.0282419529*inputs[3];
			z += -0.1980697364*inputs[4];
			z += 0.1759876609*inputs[5];
			z += -0.0087808426*inputs[6];
			z += 0.2988702059*inputs[7];
			z += -0.1795153469*inputs[8];
			z += 0.0817534551*inputs[9];
			z += 0.1683916301*inputs[10];
			z += -0.0566749834*inputs[11];
			z += 0.0525489636*inputs[12];
			z += -0.3537147641*inputs[13];
			z += -0.2379335314*inputs[14];
			z += 0.1161331981*inputs[15];
			z += 0.0448098667*inputs[16];
			z += -0.1854846478*inputs[17];
			z += -0.2947737575;
		break;
		case 4:
			z += 0.0583443530*inputs[0];
			z += 0.8069152236*inputs[1];
			z += 0.1698902547*inputs[2];
			z += 0.0233107992*inputs[3];
			z += 0.2545813024*inputs[4];
			z += 0.0008795160*inputs[5];
			z += 0.0596473813*inputs[6];
			z += 0.4950052798*inputs[7];
			z += -0.0531688854*inputs[8];
			z += 0.0558208451*inputs[9];
			z += 0.2465561181*inputs[10];
			z += 0.1502753496*inputs[11];
			z += -0.0463871919*inputs[12];
			z += 0.5787262917*inputs[13];
			z += -0.0181609709*inputs[14];
			z += 0.0050145406*inputs[15];
			z += -0.0332786366*inputs[16];
			z += -0.2529800236*inputs[17];
			z += 0.0241602771;
		break;
		case 5:
			z += -0.0840414315*inputs[0];
			z += 0.0208683796*inputs[1];
			z += -0.0376796462*inputs[2];
			z += -0.0977470726*inputs[3];
			z += 0.0108061219*inputs[4];
			z += 0.0284934230*inputs[5];
			z += -0.0629269928*inputs[6];
			z += 0.0469024740*inputs[7];
			z += -0.0256243404*inputs[8];
			z += -0.0273302998*inputs[9];
			z += -0.0150022572*inputs[10];
			z += -0.0176036824*inputs[11];
			z += -0.1187920198*inputs[12];
			z += -0.0482890755*inputs[13];
			z += -0.0071817483*inputs[14];
			z += -0.0680935010*inputs[15];
			z += 0.0098935561*inputs[16];
			z += -0.0489657931*inputs[17];
			z += -0.0027337901;
		break;
		case 6:
			z += 0.0400490612*inputs[0];
			z += -0.1747601032*inputs[1];
			z += 0.0168275759*inputs[2];
			z += 0.0412726514*inputs[3];
			z += -0.0887862667*inputs[4];
			z += -0.1667144448*inputs[5];
			z += 0.0561198071*inputs[6];
			z += -0.0223848000*inputs[7];
			z += 0.2510057688*inputs[8];
			z += 0.1037906483*inputs[9];
			z += -0.1228651106*inputs[10];
			z += -0.2407831997*inputs[11];
			z += -0.0101519041*inputs[12];
			z += -0.8254893422*inputs[13];
			z += -0.0742351413*inputs[14];
			z += 0.0611764714*inputs[15];
			z += 0.8332481980*inputs[16];
			z += 0.1083513051*inputs[17];
			z += -0.2176835835;
		break;
		case 7:
			z += 0.0037284042*inputs[0];
			z += -0.4913026989*inputs[1];
			z += -0.1869699061*inputs[2];
			z += -0.0154419867*inputs[3];
			z += -0.5402230024*inputs[4];
			z += 0.0183391403*inputs[5];
			z += -0.1016321629*inputs[6];
			z += -0.4175142348*inputs[7];
			z += 0.3222971261*inputs[8];
			z += -0.1138796061*inputs[9];
			z += -0.0622789674*inputs[10];
			z += -0.1032139361*inputs[11];
			z += -0.0037015914*inputs[12];
			z += 0.2556922138*inputs[13];
			z += -0.0270654242*inputs[14];
			z += 0.0927471742*inputs[15];
			z += 0.2035142332*inputs[16];
			z += -0.4025943875*inputs[17];
			z += 0.0392079726;
		break;
		case 8:
			z += -0.0133927250*inputs[0];
			z += 0.5506893396*inputs[1];
			z += -0.0338934585*inputs[2];
			z += 0.0142582795*inputs[3];
			z += 0.4013221562*inputs[4];
			z += -0.0770149603*inputs[5];
			z += -0.0959095880*inputs[6];
			z += 0.5328213573*inputs[7];
			z += 0.0142719941*inputs[8];
			z += -0.0813079551*inputs[9];
			z += 0.0352453738*inputs[10];
			z += -0.1046615914*inputs[11];
			z += 0.0158330016*inputs[12];
			z += -0.2657524943*inputs[13];
			z += -0.1084659249*inputs[14];
			z += -0.0004358313*inputs[15];
			z += -0.7834933996*inputs[16];
			z += -0.1245265901*inputs[17];
			z += 0.2884150743;
		break;
		case 9:
			z += -0.1181168780*inputs[0];
			z += 0.0331724510*inputs[1];
			z += 0.0494688861*inputs[2];
			z += -0.0541076437*inputs[3];
			z += -0.0272387285*inputs[4];
			z += 0.0353932641*inputs[5];
			z += -0.0344132856*inputs[6];
			z += 0.0257694386*inputs[7];
			z += 0.0239062980*inputs[8];
			z += -0.0334765427*inputs[9];
			z += 0.0257762242*inputs[10];
			z += 0.0066166609*inputs[11];
			z += -0.0608691685*inputs[12];
			z += 0.0001602337*inputs[13];
			z += -0.0002671473*inputs[14];
			z += -0.1225191504*inputs[15];
			z += -0.0350679159*inputs[16];
			z += -0.0406386741*inputs[17];
			z += -0.0027057354;
		break;
		case 10:
			z += -0.0991332158*inputs[0];
			z += -0.0211422108*inputs[1];
			z += -0.0412289202*inputs[2];
			z += -0.0769715756*inputs[3];
			z += 0.0493591167*inputs[4];
			z += -0.0262690615*inputs[5];
			z += -0.0653572530*inputs[6];
			z += -0.0242648087*inputs[7];
			z += 0.0376012698*inputs[8];
			z += -0.0380901545*inputs[9];
			z += 0.0014729949*inputs[10];
			z += 0.0074755158*inputs[11];
			z += -0.0467430539*inputs[12];
			z += -0.0051542413*inputs[13];
			z += -0.0051117595*inputs[14];
			z += -0.1341931969*inputs[15];
			z += -0.0239107609*inputs[16];
			z += -0.0231171418*inputs[17];
			z += -0.0265022181;
		break;
		case 11:
			z += 0.0281676855*inputs[0];
			z += 0.2691553235*inputs[1];
			z += -0.0205983259*inputs[2];
			z += 0.0087590516*inputs[3];
			z += 0.1595107913*inputs[4];
			z += -0.1175808311*inputs[5];
			z += 0.0192620102*inputs[6];
			z += 0.3134548664*inputs[7];
			z += 0.0503726341*inputs[8];
			z += 0.0306513496*inputs[9];
			z += 0.1431530714*inputs[10];
			z += -0.1185850054*inputs[11];
			z += -0.0038545839*inputs[12];
			z += 1.7723054886*inputs[13];
			z += -0.0302290451*inputs[14];
			z += 0.0627267063*inputs[15];
			z += -2.2936871052*inputs[16];
			z += -0.1863808334*inputs[17];
			z += 0.0271064118;
		break;
		case 12:
			z += 0.0170416776*inputs[0];
			z += 0.0372815952*inputs[1];
			z += -0.0062327795*inputs[2];
			z += 0.0474016592*inputs[3];
			z += 0.1548763961*inputs[4];
			z += -0.0752028003*inputs[5];
			z += 0.0510119461*inputs[6];
			z += 0.2803627253*inputs[7];
			z += -0.0592977256*inputs[8];
			z += 0.0027670800*inputs[9];
			z += -0.1378611624*inputs[10];
			z += -0.3561253548*inputs[11];
			z += -0.0510232747*inputs[12];
			z += -1.0646920204*inputs[13];
			z += 0.0076315161*inputs[14];
			z += 0.0405656435*inputs[15];
			z += -0.2353120148*inputs[16];
			z += -0.0927162990*inputs[17];
			z += -0.1181227639;
		break;
		case 13:
			z += -0.0987499282*inputs[0];
			z += -0.0351507217*inputs[1];
			z += 0.0459021553*inputs[2];
			z += -0.0101160472*inputs[3];
			z += -0.0496673584*inputs[4];
			z += 0.0168934893*inputs[5];
			z += -0.0144691477*inputs[6];
			z += 0.0120406197*inputs[7];
			z += 0.0384818800*inputs[8];
			z += -0.0481866971*inputs[9];
			z += -0.0294594094*inputs[10];
			z += 0.0593832880*inputs[11];
			z += -0.1656553745*inputs[12];
			z += -0.0037139531*inputs[13];
			z += 0.0134994239*inputs[14];
			z += -0.0512306169*inputs[15];
			z += -0.0109014930*inputs[16];
			z += -0.0023534482*inputs[17];
			z += 0.0188113973;
		break;
		case 14:
			z += -0.1118215322*inputs[0];
			z += -0.0298112966*inputs[1];
			z += 0.0056068352*inputs[2];
			z += -0.0275312718*inputs[3];
			z += 0.0427906401*inputs[4];
			z += -0.0322686173*inputs[5];
			z += -0.0261567850*inputs[6];
			z += 0.0399311483*inputs[7];
			z += -0.0319064818*inputs[8];
			z += 0.0079469308*inputs[9];
			z += -0.0158103090*inputs[10];
			z += 0.0146024302*inputs[11];
			z += -0.1173003539*inputs[12];
			z += -0.0268489309*inputs[13];
			z += 0.0271688364*inputs[14];
			z += -0.1064499393*inputs[15];
			z += 0.0107299211*inputs[16];
			z += 0.0500526913*inputs[17];
			z += -0.0022281937;
		break;
		case 15:
			z += 0.0094509348*inputs[0];
			z += 0.2841568589*inputs[1];
			z += -0.2951248586*inputs[2];
			z += -0.0132847577*inputs[3];
			z += -0.0468626022*inputs[4];
			z += 0.1003393233*inputs[5];
			z += -0.0027326762*inputs[6];
			z += 0.1584194005*inputs[7];
			z += 0.1607712358*inputs[8];
			z += 0.0469137095*inputs[9];
			z += 0.0520517305*inputs[10];
			z += -0.3054189086*inputs[11];
			z += -0.0854144916*inputs[12];
			z += -0.1773628742*inputs[13];
			z += -0.2013223469*inputs[14];
			z += 0.0507216975*inputs[15];
			z += -0.1234263033*inputs[16];
			z += -0.1186807752*inputs[17];
			z += 0.4428995252;
		break;
		case 16:
			z += 0.0123170391*inputs[0];
			z += -0.6659676433*inputs[1];
			z += -0.0252458043*inputs[2];
			z += -0.0238791760*inputs[3];
			z += -0.4263159931*inputs[4];
			z += -0.1044919565*inputs[5];
			z += -0.0428058021*inputs[6];
			z += -0.4503673911*inputs[7];
			z += 0.0667028129*inputs[8];
			z += -0.0232910607*inputs[9];
			z += -0.1249195263*inputs[10];
			z += -0.0043778010*inputs[11];
			z += 0.0161496401*inputs[12];
			z += 1.9995613098*inputs[13];
			z += 0.0412585102*inputs[14];
			z += 0.0626338795*inputs[15];
			z += -0.3717596531*inputs[16];
			z += 0.0963880420*inputs[17];
			z += 0.2036430389;
		break;
		case 17:
			z += -0.0651002601*inputs[0];
			z += -0.3159226775*inputs[1];
			z += 0.1866603345*inputs[2];
			z += 0.0802954808*inputs[3];
			z += 0.3536249399*inputs[4];
			z += 0.2304558903*inputs[5];
			z += 0.0652203336*inputs[6];
			z += 0.2410279214*inputs[7];
			z += 0.3291404545*inputs[8];
			z += 0.0567904413*inputs[9];
			z += -0.3201662600*inputs[10];
			z += -0.0999361426*inputs[11];
			z += -0.0211926587*inputs[12];
			z += -0.2302234620*inputs[13];
			z += 0.2503274977*inputs[14];
			z += -0.1492844224*inputs[15];
			z += 0.3624373674*inputs[16];
			z += -0.0796866417*inputs[17];
			z += 0.2361597866;
		break;
		case 18:
			z += 0.0321641415*inputs[0];
			z += -0.4483002126*inputs[1];
			z += -0.1892971247*inputs[2];
			z += 0.0015557033*inputs[3];
			z += -0.6308885813*inputs[4];
			z += -0.4401934743*inputs[5];
			z += 0.0042715906*inputs[6];
			z += -0.3582422435*inputs[7];
			z += -0.1219438836*inputs[8];
			z += 0.0073201274*inputs[9];
			z += 0.1626627594*inputs[10];
			z += -0.1003466472*inputs[11];
			z += -0.0248744879*inputs[12];
			z += 0.6446251869*inputs[13];
			z += -0.0993171111*inputs[14];
			z += -0.0440500453*inputs[15];
			z += 0.6476157308*inputs[16];
			z += -0.4814318120*inputs[17];
			z += 0.1022077277;
		break;
		case 19:
			z += 0.0734113082*inputs[0];
			z += -0.6252704263*inputs[1];
			z += -0.3957826793*inputs[2];
			z += 0.0563448034*inputs[3];
			z += -0.6634603739*inputs[4];
			z += -0.1228584051*inputs[5];
			z += 0.0354412422*inputs[6];
			z += -0.5052871704*inputs[7];
			z += -0.0244360883*inputs[8];
			z += 0.0448354743*inputs[9];
			z += -0.1788402200*inputs[10];
			z += -0.1279975474*inputs[11];
			z += -0.0105350874*inputs[12];
			z += 0.9631694555*inputs[13];
			z += -0.0179412160*inputs[14];
			z += -0.1595367640*inputs[15];
			z += 0.4614560306*inputs[16];
			z += 0.2635126710*inputs[17];
			z += -0.2992490828;
		break;
		case 20:
			z += 0.0656169578*inputs[0];
			z += 0.0988995060*inputs[1];
			z += 0.0196155794*inputs[2];
			z += -0.0543870814*inputs[3];
			z += -0.2939945459*inputs[4];
			z += -0.2429835349*inputs[5];
			z += 0.0066403989*inputs[6];
			z += 0.3086554110*inputs[7];
			z += 0.1109747812*inputs[8];
			z += -0.0209518410*inputs[9];
			z += -0.1838335544*inputs[10];
			z += -0.1648391187*inputs[11];
			z += 0.0356745161*inputs[12];
			z += -0.3549879193*inputs[13];
			z += 0.1993847042*inputs[14];
			z += 0.0089335954*inputs[15];
			z += -0.2621031106*inputs[16];
			z += -0.2152938098*inputs[17];
			z += -0.3095908165;
		break;
	}

	return z;
}


double model_k57nj2(std::vector<double> &inputs){
	std::vector<double> l1_neurons_z_k57nj2;
	for(int l1_n=0; l1_n<21; ++l1_n)
		l1_neurons_z_k57nj2.push_back( selu_k57nj2(l1_func_k57nj2(inputs,l1_n)) );
//------ end layer 1 ------

	std::vector<double> l2_neurons_z_k57nj2;
	for(int l2_n=0; l2_n<13; ++l2_n)
		l2_neurons_z_k57nj2.push_back( selu_k57nj2(l2_func_k57nj2(l1_neurons_z_k57nj2,l2_n)) );
//------ end layer 2 ------

	std::vector<double> l3_neurons_z_k57nj2;
	for(int l3_n=0; l3_n<8; ++l3_n)
		l3_neurons_z_k57nj2.push_back( selu_k57nj2(l3_func_k57nj2(l2_neurons_z_k57nj2,l3_n)) );
//------ end layer 3 ------


	return sigmoid_k57nj2( l4_func_k57nj2(l3_neurons_z_k57nj2,0) );
}
